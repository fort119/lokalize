/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"Graphik LCG";
  font-weight:600;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/GraphikLCG-Semibold.woff2") format("woff2"), url("../fonts/GraphikLCG-Semibold.woff") format("woff");
}
@font-face{
  font-family:"Graphik LCG";
  font-weight:normal;
  font-style:normal;
  font-display:swap;
  src:url("../fonts/GraphikLCG-Regular.woff2") format("woff2"), url("../fonts/GraphikLCG-Regular.woff") format("woff");
}
*,
*::before,
*::after{
  box-sizing:border-box;
}

html{
  font-size:16px;
}

body{
  overflow-x:hidden;
  font-family:"Graphik LCG", sans-serif;
  font-size:15px;
}

a{
  text-decoration:none;
  color:#000000;
}

h1{
  font-weight:600;
  line-height:1.08;
}

.container{
  width:min(100% - 40px, 1290px);
  margin-inline:auto;
}

.btn{
  border-width:1px;
  border-style:solid;
  font-size:1rem;
  font-weight:600;
}
.btn--light{
  border-color:rgba(0, 0, 0, 0.5);
  background-color:#ffffff;
}
.btn--accent{
  color:#ffffff;
  border-color:#ff6336;
  background-color:#ff6336;
}
.btn--sm{
  min-width:120px;
}

.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

.text-underline{
  border-bottom:1px solid #000000;
}

.header{
  display:flex;
  flex-direction:column;
  min-height:100vh;
  background-color:#ffffff;
}

.header-menu{
  position:relative;
  display:flex;
  align-items:center;
  padding:25px 0;
  gap:20px 50px;
}
.header-menu::after{
  position:absolute;
  bottom:0;
  left:50%;
  width:100vw;
  height:1px;
  margin-left:-50vw;
  content:"";
  background-color:#cccccc;
}
.header-menu__navbar{
  flex-grow:1;
}

.header-content{
  display:grid;
  align-content:center;
  flex-grow:1;
  padding:80px 0;
  row-gap:25px;
}
.header-content__title{
  margin:0 0 25px;
  grid-area:ttl;
}
.header-content__description{
  margin-bottom:25px;
  line-height:1.4;
  grid-area:dsc;
}
.header-content__actions{
  display:flex;
  gap:10px;
  grid-area:act;
}
.header-content__notes{
  line-height:1.67;
  grid-area:nts;
}
.header-content__picture{
  grid-area:pic;
}

.navbar__btn{
  display:none;
}
.navbar__list{
  display:flex;
  flex-wrap:wrap;
  margin:0;
  padding:0;
  list-style:none;
}
.navbar__link{
  display:block;
  padding:0.5em 0;
}

.actions{
  display:flex;
  gap:10px;
}

.brands{
  padding:98px 0 90px;
  background-color:#ff9c7d;
}
.brands__title{
  max-width:720px;
  margin:0 auto 53px;
  text-align:center;
  font-weight:600;
  line-height:1.2;
}
.brands__list{
  display:flex;
  align-items:center;
  flex-wrap:wrap;
  justify-content:space-between;
  gap:20px 40px;
}

.brand-item{
  text-align:center;
}

.job{
  padding-top:90px;
  padding-bottom:50px;
}

.control{
  display:flex;
  margin-bottom:100px;
}
.control__content{
  display:flex;
  flex-basis:0;
  flex-direction:column;
  flex-grow:1;
  justify-content:center;
  gap:30px;
}
.control__title{
  margin:0;
  font-weight:600;
  line-height:1.2;
}
.control__description{
  margin:0;
  line-height:1.5;
}
.control__button{
  font-size:1.25rem;
  font-weight:600;
  line-height:1.5;
}

.quality{
  display:flex;
  margin-bottom:100px;
}
.quality__content{
  display:flex;
  flex-basis:0;
  flex-direction:column;
  flex-grow:1;
  justify-content:center;
  gap:30px;
}
.quality__title{
  margin:0;
  font-weight:600;
  line-height:1.2;
}
.quality__description{
  margin:0;
  line-height:1.5;
}
.quality__button{
  font-size:1.25rem;
  font-weight:600;
  line-height:1.5;
}

.time{
  display:flex;
  margin-bottom:100px;
  flex-direction:row-reverse;
}
.time__content{
  display:flex;
  flex-basis:0;
  flex-direction:column;
  flex-grow:1;
  justify-content:center;
  gap:30px;
}
.time__title{
  margin:0;
  font-weight:600;
  line-height:1.2;
}
.time__description{
  margin:0;
  line-height:1.5;
}
.time__button{
  font-size:1.25rem;
  font-weight:600;
  line-height:1.5;
}

.work{
  display:flex;
  margin-bottom:100px;
  flex-direction:row-reverse;
}
.work__content{
  display:flex;
  flex-basis:0;
  flex-direction:column;
  flex-grow:1;
  justify-content:center;
  gap:30px;
}
.work__title{
  margin:0;
  font-weight:600;
  line-height:1.2;
}
.work__description{
  margin:0;
  line-height:1.5;
}
.work__button{
  font-size:1.25rem;
  font-weight:600;
  line-height:1.5;
}

.ability{
  padding:120px 0 145px;
  background-color:#fff8e4;
}
.ability__caption{
  margin:0 auto 80px;
  font-size:50px;
  text-align:center;
  font-weight:600;
}

.ability__grid-item{
  text-align:center;
  display:flex;
  flex-direction:column;
  gap:23px;
}

.ability__item-caption{
  font-weight:600;
  font-size:25px;
  margin:0;
}

.ability__item-descr{
  font-weight:400;
  font-size:18px;
  line-height:25px;
  margin:0;
}

.ability__grid{
  display:grid;
  grid-template-columns:330px 330px 330px;
  column-gap:110px;
  row-gap:75px;
  justify-content:space-evenly;
}

.boost{
  padding:148px 0 145px;
}
.boost__caption{
  margin:0 auto 90px;
  font-size:50px;
  text-align:center;
  font-weight:600;
}

.boost__item{
  display:flex;
  flex-direction:column;
  max-width:409px;
  gap:20px;
}
.boost__item-image{
  height:201px;
  margin-bottom:15px;
}
.boost__item-caption{
  font-weight:600;
  font-size:30px;
  margin:0;
}
.boost__item-descr{
  font-weight:400;
  font-size:20px;
  line-height:1.85rem;
  margin-bottom:10px;
}
.boost__item-link{
  font-weight:400;
  font-size:20px;
  border-bottom:1px solid #000000;
}

.boost__items{
  display:flex;
  gap:30px;
}

.interview{
  background-color:#c9e8f2;
  padding:54px 0 103px;
}

.interview__text{
  margin:10px 0;
  font-weight:400;
  font-size:30px;
  line-height:2.5rem;
  margin-bottom:28px;
}

.interview__person{
  font-weight:400;
  font-size:15px;
  margin-bottom:10px;
  font-family:"Roboto", sans-serif;
}

.interview__inner{
  display:flex;
  gap:90px;
}

@media (min-width: 768px){
  .control__image{
    width:100%;
  }
  .quality__image{
    width:100%;
  }
  .time__image{
    width:100%;
  }
  .work__image{
    width:100%;
  }
  .interview__text{
    font-size:25px;
  }
}

@media (min-width: 992px){
  .btn--sm{
    min-height:45px;
  }
  .btn--md{
    min-width:160px;
    min-height:60px;
  }
  .header-content__description{
    padding-right:60px;
  }
  .header-content__image{
    width:100%;
    transform:translateX(-20px);
  }
}

@media (min-width: 1200px){
  h1{
    font-size:4.0625rem;
  }
  .header-content{
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:560px auto;
  }
  .header-content__description{
    font-size:1.5625rem;
  }
  .navbar__list{
    gap:20px 50px;
  }
  .brands__title{
    font-size:3.125rem;
  }
  .control__title{
    font-size:3.125rem;
  }
  .control__description{
    font-size:1.25rem;
  }
  .quality__title{
    font-size:3.125rem;
  }
  .quality__description{
    font-size:1.25rem;
  }
  .time__title{
    font-size:3.125rem;
  }
  .time__description{
    font-size:1.25rem;
  }
  .work__title{
    font-size:3.125rem;
  }
  .work__description{
    font-size:1.25rem;
  }
  .ability__caption{
    font-size:3.125rem;
  }
  .boost__caption{
    font-size:3.125rem;
  }
}

@media (min-width: 1380px){
  .control{
    gap:138px;
  }
  .control__picture{
    flex-basis:632px;
  }
  .quality{
    gap:138px;
  }
  .quality__picture{
    flex-basis:632px;
  }
  .time{
    gap:138px;
  }
  .time__picture{
    flex-basis:632px;
  }
  .work{
    gap:138px;
  }
  .work__picture{
    flex-basis:632px;
  }
}

@media (max-width: 1379.8px){
  .control__picture{
    flex-basis:0;
    flex-grow:1;
  }
  .quality__picture{
    flex-basis:0;
    flex-grow:1;
  }
  .time__picture{
    flex-basis:0;
    flex-grow:1;
  }
  .work__picture{
    flex-basis:0;
    flex-grow:1;
  }
}

@media (max-width: 1379.8px) and (min-width: 992px){
  .control{
    gap:80px;
  }
  .quality{
    gap:80px;
  }
  .time{
    gap:80px;
  }
  .work{
    gap:80px;
  }
}

@media (max-width: 1199.8px){
  .header-content__description{
    font-size:1.25rem;
  }
  .navbar__list{
    justify-content:center;
    gap:0 20px;
  }
  .control__description{
    font-size:1.125rem;
  }
  .quality__description{
    font-size:1.125rem;
  }
  .time__description{
    font-size:1.125rem;
  }
  .work__description{
    font-size:1.125rem;
  }
}

@media (max-width: 1199.8px) and (min-width: 992px){
  h1{
    font-size:3.125rem;
  }
  .header-content{
    grid-template-areas:"ttl pic" "dsc pic" "act pic" "nts pic";
    grid-template-columns:1fr 1fr;
  }
  .brands__title{
    font-size:2.75rem;
  }
  .control__title{
    font-size:2.75rem;
  }
  .quality__title{
    font-size:2.75rem;
  }
  .time__title{
    font-size:2.75rem;
  }
  .work__title{
    font-size:2.75rem;
  }
  .ability__caption{
    font-size:2.75rem;
  }
  .ability__grid{
    grid-template-columns:250px 250px;
  }
  .boost__caption{
    font-size:2.75rem;
  }
}

@media (max-width: 991.8px){
  h1{
    font-size:2.5rem;
  }
  .btn--sm{
    min-height:40px;
  }
  .header-menu{
    flex-direction:column;
  }
  .header-content{
    text-align:center;
    grid-template-areas:"ttl" "dsc" "pic" "act" "nts";
  }
  .header-content__actions{
    justify-content:center;
  }
  .header-content__image{
    width:50%;
  }
  .brands__title{
    font-size:2.25rem;
  }
  .brand-item{
    flex-basis:25%;
    flex-grow:1;
    flex-shrink:0;
  }
  .control{
    gap:40px;
  }
  .control__title{
    font-size:2.25rem;
  }
  .quality{
    gap:40px;
  }
  .quality__title{
    font-size:2.25rem;
  }
  .time{
    gap:40px;
  }
  .time__title{
    font-size:2.25rem;
  }
  .work{
    gap:40px;
  }
  .work__title{
    font-size:2.25rem;
  }
  .ability__caption{
    font-size:2.25rem;
  }
  .ability__grid{
    grid-template-columns:250px;
  }
  .boost__caption{
    font-size:2.25rem;
  }
  .boost__item{
    text-align:center;
    margin:0 auto;
    margin-bottom:40px;
  }
  .boost__items{
    display:block;
  }
  .interview__inner{
    flex-direction:column-reverse;
    gap:30px;
    align-items:center;
  }
}

@media (max-width: 991.8px) and (min-width: 420px){
  .interview__text{
    font-size:25px;
  }
}

@media (max-width: 991.8px) and (min-width: 480px){
  .btn--md{
    min-width:160px;
    min-height:50px;
  }
}

@media (max-width: 767.8px){
  .control{
    flex-direction:column;
    text-align:center;
  }
  .quality{
    flex-direction:column;
    text-align:center;
  }
  .time{
    flex-direction:column;
    text-align:center;
  }
  .work{
    flex-direction:column;
    text-align:center;
  }
}

@media (max-width: 767.8px) and (min-width: 576px){
  .control__image{
    width:70%;
  }
  .quality__image{
    width:70%;
  }
  .time__image{
    width:70%;
  }
  .work__image{
    width:70%;
  }
}

@media (max-width: 575.8px){
  .control__image{
    width:100%;
  }
  .quality__image{
    width:100%;
  }
  .time__image{
    width:100%;
  }
  .work__image{
    width:100%;
  }
}

@media (max-width: 479.8px){
  .btn--md{
    min-width:140px;
    min-height:45px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */